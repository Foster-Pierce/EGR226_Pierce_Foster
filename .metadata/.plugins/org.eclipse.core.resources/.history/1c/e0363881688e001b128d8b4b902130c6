#include "msp.h"
#include<stdio.h>

void LCD_init (void);
void SysTick_Init_interrupt(void);
double convertV(double x);
double convertT(double x);
double convertT2(double x);
void adcsetup(void);
void delay_ms(int n);
void main(void)
{
    WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD;		// stop watchdog timer
    LCD_init();
    adcsetup();
    SysTick_Init_interrupt();
    __enable_interrupt();

    while(1){
    }
}

double convertV(double x){
    double voltage;
    voltage = x*0.0002;
    return voltage;
}

double convertT(double x){
    double temp;
    temp = (x*1000-500)/10;
    return temp;
}

double convertT2(double x){
    double temp;
    temp = x*1.8+32;
    return temp;
}

void adcsetup(void)
{
    ADC14->CTL0 = 0x00000010; //power on and disabled during configuration
    ADC14->CTL0 |= 0x04D80300; // S/H pulse mode, MCLCK, 32 sample clocks, sw trigger, /4 clock divide
    ADC14->CTL1 = 0x00000030; // 14-bit resolution
    ADC14->MCTL[5] = 0; // A0 input, single ended, vref=avcc
    P5SEL1 |= 0x20; // configure pin 5.5 for A0
    P5SEL0 |= 0x20;
    ADC14->CTL1 |= 0x00050000; //start converting at mem reg 5
    ADC14->CTL0 |= 2; //enable ADC after configuration
}
void SysTick_Init_interrupt(void){
    SysTick->CTRL=0;
    SysTick->LOAD=(1500000-1);      //half-second delay between displaying numbers
    SysTick->VAL=0;
    SysTick->CTRL=0x07;
}

void SysTick_Handler (void) {
    double x =0, Celsius=0, volt=0, Fahren=0;

    ADC14->CTL0 |=1;
    while(!ADC14->IFGR0);

    x = ADC14->MEM[5];
    volt = convertV(x);
    Celsius = convertT(volt);
    Fahren = convertT2(Celsius);

    printf("Temperature in Celcius:\t%f\n", Celsius);
    printf("Temperature in Fahrenheit:\t%f\n", Fahren);
}
void LCD_init (void){
    //initialize data pins P2.4 - 2.7
    P2SEL1 = 0x00;
    P2SEL0 = 0x00;
    P2DIR |= (BIT4 | BIT5 | BIT6 | BIT7);
    P2REN &= ~(BIT4 | BIT5 | BIT6 | BIT7);
    P2OUT |= (BIT4 | BIT5 | BIT6 | BIT7);

    //initialize RS and E on P5.2 & P5.0
    P5SEL1 = 0x00;
    P5SEL0 = 0x00;
    P5DIR |= (BIT2 | BIT0);
    P5REN &= ~(BIT2 | BIT0);
    P5OUT &= ~(BIT2 | BIT0);
    Systick_ms_delay(60);


    //initialize LCD
    write_command(3);
    Systick_ms_delay(100);
    write_command(3);
    Systick_us_delay(200);
    write_command(3);
    Systick_ms_delay(100);
    write_command(2);
    Systick_us_delay(100);
    write_command(0x28);
    Systick_us_delay(100);
    write_command(0x0F);
    Systick_us_delay(100);
    write_command(0x01);
    Systick_us_delay(100);
    write_command(0x06);
    Systick_ms_delay(10);
}
