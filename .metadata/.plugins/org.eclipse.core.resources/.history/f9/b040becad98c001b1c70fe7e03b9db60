#include <TimerLib_part2.h>
#include "msp.h"
volatile double DC=0;

void Setup_Init(void){

    P4SEL1 &= ~BIT2; // configure P4.2 as simple I/O SWITCH 1 (RED)
    P4SEL0 &= ~BIT2;
    P4DIR &= ~BIT2;
    P4REN |= BIT2;
    P4OUT |= BIT2;
    P4IES |= BIT2;
    P4IE |= BIT2;
    P4IFG = 0;
}

void PORT4_IRQHandler (void){   // port 4 service routine
    if (P4IFG & BIT3){          // check if green had interrupt
        if ((DC>=0) & (DC<=1))
            DC += .1;
        else
            DC=1;
        MotorSpeed(DC);         // do something
        P4IFG &= ~BIT3;         //turn off flag
    }
    else if (P4IFG & BIT1){      // check if blue had interrupt
        if ((DC>0) & (DC<1))
            DC -= .1;
        else
            DC=0;
        MotorSpeed(DC);         // do something
        P4IFG &= ~BIT1;         //turn off flag
    }
    else if (P4IFG & BIT2){      // check if red had interrupt
        DC = 0;
        MotorSpeed(DC);         // do something
        P4IFG &= ~BIT2;         //turn off flag
    }
    else
        P4IFG=0;
}

void SysTick_ms_delay(int n){
    int i;
    SysTick->LOAD=(3000-1);
    SysTick->VAL=0;
    SysTick->CTRL=0x5;

    for(i=0;i<n;i++){
        while((SysTick->CTRL & BIT(16))==0);
    }

    SysTick->CTRL=0;

}
